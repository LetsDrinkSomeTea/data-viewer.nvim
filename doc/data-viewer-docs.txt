*data-viewer-docs.txt*      For Neovim >= 0.8.0      Last change: 2025 July 25

==============================================================================
Table of Contents                         *data-viewer-docs-table-of-contents*

1. DataViewer.nvim                          |data-viewer-docs-dataviewer.nvim|
  - Requirements               |data-viewer-docs-dataviewer.nvim-requirements|
  - Usage                             |data-viewer-docs-dataviewer.nvim-usage|
  - Installation               |data-viewer-docs-dataviewer.nvim-installation|
  - Config                           |data-viewer-docs-dataviewer.nvim-config|
  - TODO                               |data-viewer-docs-dataviewer.nvim-todo|

==============================================================================
1. DataViewer.nvim                          *data-viewer-docs-dataviewer.nvim*



Lightweight neovim plugin provides a table view for inspect data files such as
`csv`, `tsv`

Floating View
Tab View

SUPPORTED FILETYPES ~

- csv
- tsv
- sqlite


REQUIREMENTS                   *data-viewer-docs-dataviewer.nvim-requirements*

- neovim >= 0.8
- plenary <https://github.com/nvim-lua/plenary.nvim>
- sqlite.lua <https://github.com/kkharji/sqlite.lua> (Optional)


USAGE                                 *data-viewer-docs-dataviewer.nvim-usage*


COMMANDS ~

- `:DataViewer` – open with current file and auto detect filetype
- `:DataViewer [filetype]` – open with current file with given filetype
- `:DataViewer [filepath] [filetype]` – open with given file and given filetype
- `:DataViewerNextTable`
- `:DataViewerPrevTable`
- `:DataViewerClose`


INSTALLATION                   *data-viewer-docs-dataviewer.nvim-installation*


LAZY ~

>lua
    require("lazy").setup({
      {
        'vidocqh/data-viewer.nvim',
        opts = {},
        dependencies = {
          "nvim-lua/plenary.nvim",
          "kkharji/sqlite.lua", -- Optional, sqlite support
        }
      },
    })
<


PAQ ~

>lua
    require('data-viewer').setup()
<


CONFIG                               *data-viewer-docs-dataviewer.nvim-config*


DEFAULT CONFIG ~

>lua
    local config = {
      autoDisplayDsv = true, -- Automatically display DSV files (csv, tsv, ssv)
      autoDisplaySqlite = true, -- Automatically display SQLite files
      showSqlSequenceTable = false, -- Show sqlite_sequence table in SQLite viewer
      maxLineEachTable = 100,
      columnColorEnable = true,
      columnColorRoulette = { -- Highlight groups for alternating columns
        "DataViewerColumn1",
        "DataViewerColumn2",
        "DataViewerColumn3",
      },
      delimiterHighlight = "DataViewerDelimiter", -- Highlight group for borders and delimiters
      focusTableHighlight = "DataViewerFocusTable", -- Highlight group for active table name
      view = {
        float = false, -- True will open in a floating window
        width = 0.8, -- Less than 1 means ratio to screen width, valid when float = true
        height = 0.8, -- Less than 1 means ratio to screen height, valid when float = true
        zindex = 50, -- Valid when float = true
        relative = true, -- If to open the window relative to the current buffer, valid when float = true
        adaptiveColumns = true, -- Automatically adjust column widths to fit window
      },
      keymap = {
        quit = "q",
        next_table = "<C-n>",
        prev_table = "<C-p>",
        toggle_adaptive = "<C-t>",
        expand_cell = "<C-e>",
      },
    }
<


HIGHLIGHT GROUPS ~

The plugin uses theme-compatible highlight groups by default. You can customize
the colors by configuring these options:


COLUMN COLORS

- `columnColorRoulette`Array of highlight groups that cycle through columns
- `delimiterHighlight`Highlight group for table borders and column separators
- `focusTableHighlight`Highlight group for the active table name


EXAMPLE: CUSTOM COLOR CONFIGURATION

>lua
    require('data-viewer').setup({
      columnColorEnable = true,
      columnColorRoulette = {
        "DataViewerColumn1",  -- Links to String (usually green/yellow)
        "DataViewerColumn2",  -- Links to Constant (usually orange/red)
        "DataViewerColumn3",  -- Links to Function (usually blue/purple)
      },
      delimiterHighlight = "DataViewerDelimiter", -- Non-italic Comment color
      focusTableHighlight = "DataViewerFocusTable", -- Active table name color -- Links to Title
    })
<


AVAILABLE HIGHLIGHT GROUPS

- **DataViewerColumn1**Column highlighting (links to `String` by default)
- **DataViewerColumn2**Column highlighting (links to `Constant` by default)
- **DataViewerColumn3**Column highlighting (links to `Function` by default)
- **DataViewerDelimiter**Border/delimiter color (non-italic `Comment` color)
- **DataViewerFocusTable**Active table name highlighting (links to `Title` by default)

All highlight groups are automatically created during setup and can be
customized by users.


TODO                                   *data-viewer-docs-dataviewer.nvim-todo*

- More filetypes support
- Table styles

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
